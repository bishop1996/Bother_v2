import { createContext } from "react"

export const LiveDesktopContext = createContext(null)
export const AppContext = createContext({
    id: null,
    onCloseButton: id => {},
    isActive: true,
})

// Trying out use-methods for mutable-style state management
export const desktopMethods = state => {
    const getApp = id => state.apps.find(app => app.id === id)
    return {
        resetApps(initialState) {
            return initialState
        },
        switchToApp(targetId) {
            getApp(targetId).isOpen = true
            state.apps = [
                ...state.apps.filter(app => app.id !== targetId),
                getApp(targetId),
            ]
            state.apps.forEach((app, index) => {
                app.stackIndex = index
            })
        },
        closeAppWindow(targetId) {
            getApp(targetId).isOpen = false
        },
    }
}
